"""
–ü–∏—à—É —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞
–≠—Ç–æ —É—á–µ–±–Ω—ã–π –ø—Ä–æ–µ–∫—Ç.
–ê–¥—Ä–µ—Å —É—Ä–æ–∫–∞ (–æ–¥–Ω–æ–≥–æ –∏–∑):
https://www.youtube.com/watch?v=RpiWnPNTeww
–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞: pyTelegramBotAPI
Bot: @epTestChel_bot
–°—Å—ã–ª–∫–∞: https://t.me/epTestChel_bot


"""

# –î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –±—ã—Å—Ç—Ä–æ–¥–µ–π—Å—Ç–≤–∏—è –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º.
# –ï—Å–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å—é –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É, —Ç–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –±—É–¥–µ—Ç
# –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –ø–æ–∏—Å–∫ –ø–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ (–Ω–∞—Å–∫–æ–ª—å–∫–æ —è –ø–æ–Ω—è–ª)
from webbrowser import open as web_open
import time

from telebot import TeleBot
import telebot.types as tt
import psycopg2 as psy

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫
import settings


bot = TeleBot(settings.MY_TELEGRAM_API)


def getting_time() -> time.struct_time:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –Ω–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ
    :return:
    """
    return time.localtime(time.time())


def connect_to_db() -> psy.connect:
    """
    –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î PostgresQL
    :return:
    """
    try:
        print(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î {getting_time()}")
        with psy.connect(
            dbname="ep20240806test",
            user="postgres",
            password="Postgres",
            host="localhost",
            port="5432",
        ) as con:
            print(f"–ë–î –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ {getting_time()}")
        return con
    except psy.Error as err:
        print(f"–û—à–∏–±–∫–∞: \n:{err}\n{getting_time()}")
        raise err


@bot.message_handler(commands=["start"])
def start_bot(message: tt.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã start –∏ –≤—ã–≤–æ–¥ –∫–Ω–æ–ø–æ–∫ –ø–æ–¥ –ø–æ–ª–µ–º
    —Ç–µ–∫—Å—Ç–∞ –≤–≤–æ–¥–∞ –≤ telergamm
    :param message:
    :return:
    """
    markup = tt.ReplyKeyboardMarkup(resize_keyboard=True)

    # –°–æ–∑–¥–∞—é –∫–Ω–æ–ø–∫–∏
    # –ë—É–¥—É—Ç —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –ø–æ–¥ —Ç–µ–∫—Å—Ç–æ–≤—ã–º –ø–æ–ª–µ–º –≤–≤–æ–¥–∞
    btn1 = tt.KeyboardButton("ü§Ø–û –ø—Ä–æ–µ–∫—Ç–µü§Ø")
    btn2 = tt.KeyboardButton("–°–∞–π—Ç –ø—Ä–æ–µ–∫—Ç–∞")
    btn3 = tt.KeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã")

    # –í –ø–µ—Ä–≤–æ–º —Ä—è–¥—É –±—É–¥–µ—Ç –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞
    markup.row(btn1)

    # –í–æ –≤—Ç–æ—Ä–æ–º —Ä—è–¥—É –±—É–¥–µ—Ç 2 –∫–Ω–æ–ø–∫–∏
    markup.row(btn2, btn3)

    # –û—Ç–ø—Ä–∞–≤–ª—è—é –ø—Ä–∏–≤–µ—Ç –∏ –Ω–∞–∑–≤–∞–Ω–µ–∏ –Ω–∞–∂–∞—Ç—Ç–π –∫–Ω–æ–ø–∫–∏ –≤ —á–∞—Ç –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç", reply_markup=markup)
    # —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥, —ç—Ç–æ –∫–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞

    # –û—Ç–∫—Ä—ã–≤–∞—é —Ñ–∞–π–ª –Ω–∞ —á—Ç–µ–Ω–∏–µ –≤ –¥–≤–æ–∏—á–Ω–æ—Å–º(–Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–º) —Ä–µ–∂–∏–º–µ,
    # –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ.
    # –í–∏–¥–µ–æ, –∞—É–¥–∏–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∞–Ω–∞–ª–æ–≥–∏—è–Ω–æ, —Ç–æ–ª—å–∫–æ —Å –ø–æ–º–æ—â—å—é –¥—Ä—É–≥–∏—Ö –º–µ—Ç–æ–¥–æ–≤
    with open ("./photos/8_03_24.jpg", "rb") as photo_file:
        bot.send_photo(message.chat.id, photo_file, reply_markup=markup )
    # photo_file = open ("./photos/8-03-24.jpg", "rb")
    bot.register_next_step_handler(message, on_click)

def on_click(message: tt.Message) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è –∫–Ω–æ–ø–æ–∫
    :return:
    """
    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑,
    # —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞.
    # –ß—Ç–æ –±—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–æ –µ—â–µ —Ä–∞–∑ - –Ω—É–∂–Ω–æ –∑–∞–Ω–æ–≤–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å /start
    if message.text.find("–û –ø—Ä–æ–µ–∫—Ç–µ") != -1:
        bot.send_message(message.chat.id, "–û–±—Ä–∞–±–æ—Ç–∫–∞ '–û –ø—Ä–æ–µ–∫—Ç–µ' ")
        bot.register_next_step_handler(message, on_click)
    elif message.text == "–°–∞–π—Ç –ø—Ä–æ–µ–∫—Ç–∞":
        bot.send_message(message.chat.id, "–û–±—Ä–∞–±–æ—Ç–∫–∞ '–°–∞–π—Ç –ø—Ä–æ–µ–∫—Ç–∞'")
        bot.register_next_step_handler(message, on_click)
    elif message.text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã":
        bot.send_message(message.chat.id, "–û–±—Ä–∞–±–æ—Ç–∫–∞ '–ö–æ–Ω—Ç–∞–∫—Ç—ã'")
        bot.register_next_step_handler(message, on_click)
    else: return None




@bot.message_handler(commands=["main"])
def main_bot(message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã main –∏ –≤—ã–≤–æ–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    :param message:
    :return:
    """
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫!")


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–æ–º–∞–Ω–¥—É help
@bot.message_handler(commands=["help"])
def help_info(message) -> None:
    """
    Processing help command
    :param message:
    :return:
    """
    # –° —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    bot.send_message(message.chat.id,
                     "This is <b>help</b>",
                     parse_mode='html'
    )
    # –ë–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    bot.send_message(message.chat.id, "This is help")


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–æ–º–∞–Ω–¥—É message_sys_info
@bot.message_handler(commands=["message_sys_info"])
def message_sys_info(message) -> None:
    """
    Processing command message_sys_info.
    This command dumps the entire message to the chat.
         """
    bot.send_message(message.chat.id, message)


# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç
@bot.message_handler(commands=["site", "website"])
# –ü—Ä–∏—à–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å self, —Ç–∞–∫ –∫–∞–∫ –ø–æ—á–µ–º—É-—Ç–æ –Ω–∞—á–∞–ª–∞ –ø–æ—è–≤–ª—è—Ç—å—Å—è –æ—à–∏–±–∫–∞,
# —á—Ç–æ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –≤—Ö–æ–¥—è—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä.
# –ò–Ω–µ—Ç —Å–∫–∞–∑–∞–ª, —á—Ç–æ –ª–µ—á–∏—Ç—Å—è –∏–º–µ–Ω–Ω–æ —Ç–∞–∫
def send_site(self) -> None:
    """
    Send to user our website
    :return:
    """
    web_open("mail.ru")


# –ø—Ä–∏–Ω–∏–º–∞—é —Ñ–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(content_types=["photo"])
def get_photo_file(message):
    """
    Gets photo file from user
    :param message:
    :return:
    """
    #  –í—ã–≤–æ–∂—É –≤ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ç–æ

    # –°–æ–∑–¥–∞—é –æ–±—ä–µ–∫—Ç –∫–Ω–æ–ø–∫–∏ markup —á–µ—Ä–µ–∑ –∑–Ω–∞—á–µ–Ω–∏–µ types
    # InlineKeyboardMarkup() - –∫–ª–∞—Å—Å –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫
    markup = tt.InlineKeyboardMarkup()

    # –°–æ–∑–¥–∞—é –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–µ –≤ —Ä—è–¥
    btn1 = tt.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url="mail.ru")
    btn2 = tt.InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="delete")
    btn3 = tt.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç", callback_data="edit")

    # –í –ø–µ—Ä–≤–æ–º —Ä—è–¥—É –±—É–¥–µ—Ç –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞
    markup.row(btn1)

    # –í–æ –≤—Ç–æ—Ä–æ–º —Ä—è–¥—É –±—É–¥–µ—Ç 2 –∫–Ω–æ–ø–∫–∏
    markup.row(btn2, btn3)

    # –ß–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ add –¥–æ–±–∞–≤–ª—è—é –∫–Ω–æ–ø–∫—É
    markup.add(tt.InlineKeyboardButton(
        "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç",
        url="mail.ru"
    )
    )
    # –î–æ–±–∞–≤–ª—è—é –≤—Ç–æ—Ä—É—é –∫–Ω–æ–ø–∫—É
    markup.add(tt.InlineKeyboardButton(
        "–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ",
        callback_data="delete"
    )
    )
    # –î–æ–±–∞–≤–ª—è—é —Ç—Ä–µ—Ç—å—é –∫–Ω–æ–ø–∫—É
    markup.add(tt.InlineKeyboardButton(
        "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç",
        callback_data="edit"
    )
    )

    bot.reply_to(message, f"–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {message.caption}")

    # –Ω–µ –∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫–æ–π –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, send_message –∏–ª–∏ reply_to,
    # –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–¥–∞–µ–º —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä reply_markup= ,–∫–æ—Ç–æ—Ä—ã–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ
    # –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—É—á–∞–µ—Ç –≤–µ—Å—å –æ–±—ä–µ–∫—Ç markup
    bot.reply_to(message, "–ö–∞–∫–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ!", reply_markup=markup)
    # print(message)


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —ç—Ç–∏–º –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º callback_data

@bot.callback_query_handler(func=lambda callback: True)
def callback_massage(callback):
    """

    :param callback:
    :return:
    """
    # –ß–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä data –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–º–µ–Ω–Ω–æ —Ä–∞–Ω–µ–µ –Ω–∞–∂–∞—Ç—ã–µ
    # –∫–Ω–æ–ø–∫–∏ —Å callback_data
    if callback.data == "delete":
        bot.delete_message(
            callback.message.chat.id,
            # –ò–∑–º–µ–Ω—è—é –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            callback.message.message_id - 1
        )
    elif callback.data == "edit":
        bot.edit_message_text(
            "Edit text",
            callback.message.chat.id,
            callback.message.message_id
        )


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–µ–∫—Å—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# —Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥!
# –ï—Å–ª–∏ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥, —Ç–æ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è,
# –î–∞–∂–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –Ω–µ –∫–∞–∫ –∫–æ–º–∞–Ω–¥—ã,
# –∞ –∫–∞–∫ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
@bot.message_handler()
def processing_user_text(message):
    """
    Process user text.
    This is test of handler of user messages.
    Currently, puts –ü—Ä–∏–≤–µ—Ç and adds sender's name
    :param message:
    :return:
    """
    if message.text.lower() == "–ø—Ä–∏–≤–µ—Ç":
        bot.send_message(
                         message.chat.id,
                    f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}"
        )
    elif message.text.lower() == "id":
        # –¢–∞–∫ –æ—Ç–≤–µ—á–∞–µ–º –Ω–ø –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.reply_to(message, f"id: {message.from_user.id}")


if __name__ == "__main__":
    print(f"Start bot at {getting_time()}")
    connection = connect_to_db()
    curs_db = connect_to_db().cursor
    bot.infinity_polling()
